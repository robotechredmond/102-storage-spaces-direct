{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"namePrefix": {
			"type": "string",
			"minLength": 3,
			"maxLength": 8,
			"metadata": {
				"description": "Naming prefix for each new resource created. 3-char min, 8-char max, lowercase alphanumeric"
			}			
		},
		"domainName": {
			"type": "string",
			"metadata": {
				"description": "DNS domain name for existing Active Directory domain"
			},
			"defaultValue": "contoso.com"
		},
		"adminUsername": {
			"type": "string",
			"metadata": {
				"description": "Name of the Administrator of the existing Active Directory Domain"
			}
		},
		"adminPassword": {
			"type": "securestring",
			"minLength": 12,
			"metadata": {
				"description": "Password for the Administrator account of the existing Active Directory Domain"
			}
		},
		"storageAccountType": {
			"type": "string",
			"allowedValues": [
				"Standard_LRS",
				"Standard_GRS",
				"Standard_RAGRS",
				"Premium_LRS"
			],
			"metadata": {
				"description": "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
			},
			"defaultValue": "Premium_LRS"
		},
		"nicSubnetUri": {
			"type": "string",
			"metadata": {
				"description": "Resource ID for existing vnet/subnet to which VM NICs should be attached"
			}
		},
		"lbIPAddress": {
			"type": "string",
			"metadata": {
				"description": "IP address of Internal Load Balancer for the IW File Server role to be created"
			},
			"defaultValue": "10.0.1.10"
		},
		"vmSize": {
			"type": "string",
			"metadata": {
				"description": "Size of the S2D VMs to be created"
			},
			"defaultValue": "Standard_DS1_v2"
		},
		"vmCount": {
			"type": "int",
			"minValue": 2,
			"maxValue": 3,
			"metadata": {
				"description": "Number of S2D VMs to be created in cluster (Min=2, Max=3)"
			},
			"defaultValue": 2
		},
		"vmDiskSize": {
			"type": "int",
			"minValue": 128,
			"maxValue": 1023,
			"metadata": {
				"description": "Size of each data disk in GB on each S2D VM (Min=128, Max=1023)"
			},      
			"defaultValue": 1023
		},
		"vmDiskCount": {
			"type": "int",
			"minValue": 2,
			"maxValue": 32,
			"metadata": {
				"description": "Number of data disks on each S2D VM (Min=2, Max=32). Ensure that the VM size you've selected will support this number of data disks."
			},      
			"defaultValue": 2
		},
		"fsName": {
			"type": "string",
			"metadata": {
				"description": "Name of clustered IW File Server role"
			},
			"defaultValue": "fs01"
		},
		"shareName": {
			"type": "string",
			"metadata": {
				"description": "Name of shared data folder on clustered IW File Server role"
			},
			"defaultValue": "data"    
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer"
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "WindowsServer"
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "2016-Datacenter"
		},
		"imageVersion": {
			"type": "string",
			"defaultValue": "latest"
		},
		"_artifactsLocation": {
			"type": "string"
		},
		"_artifactsLocationSasToken": {
			"type": "string"
		}
	},
	"variables": {
		"apiVersion": "2015-01-01",
		"apiVersionNetworks": "2015-06-15",
		"apiVersionVirtualMachines": "2015-06-15",
		"apiVersionVMExtensions": "2015-06-15",
		"apiVersionStorage": "2015-06-15",
		"storageNamePrefix": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'vm')]",
		"witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
		"witnessStorageType": "Standard_LRS",
		"vmNamePrefix": "[concat(parameters('namePrefix'),'-s2d-')]",
		"vmAvailabilitySetName": "[concat(variables('vmNamePrefix'),'as')]",
		"lbName": "[concat(variables('vmNamePrefix'),'lb')]",
		"lbFE": "[concat(variables('vmNamePrefix'),'lbfe')]",
		"lbBE": "[concat(variables('vmNamePrefix'),'lbbe')]",
		"lbProbe": "[concat(variables('vmNamePrefix'),'lbprobe')]",
		"lbRule1": "[concat(variables('vmNamePrefix'),'lbrule1')]",
		"lbRule2": "[concat(variables('vmNamePrefix'),'lbrule2')]",
		"lbId": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
		"lbFEConfigId": "[concat(variables('lbId'),'/frontendIPConfigurations/',variables('lbFE'))]",
		"lbBEPoolId": "[concat(variables('lbId'),'/backendAddressPools/',variables('lbBE'))]",
		"lbProbeId": "[concat(variables('lbId'),'/probes/',variables('lbProbe'))]",
		"clusterName": "[concat(variables('vmNamePrefix'),'c')]",
		"vhdContainerName": "vhds",
		"vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nested/newVM.json',parameters('_artifactsLocationSasToken'))]",
		"s2dPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/prep-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
		"s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",
		"s2dConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc/config-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
		"s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmAvailabilitySetName')]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"location": "[resourceGroup().location]",
			"properties": {}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('witnessStorageName')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[variables('witnessStorageType')]"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageNamePrefix'),copyindex())]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"copy": {
				"name": "storageAccountLoop",
				"count": "[parameters('vmCount')]"
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"apiVersion": "[variables('apiVersionNetworks')]",
			"name": "[variables('lbName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[resourceGroup().location]",
			"dependsOn": [
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "[variables('lbFE')]",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress" :"[parameters('lbIPAddress')]",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "[variables('lbBE')]"
					}
				],
				"loadBalancingRules": [
					{
						"name": "[variables('lbRule1')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('lbFEConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('lbBEPoolId')]"
						},
						"probe": {
							"id": "[variables('lbProbeId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 443,
						"backendPort": 443,
						"enableFloatingIP": false
						}
					},
					{
						"name": "[variables('lbRule2')]",
						"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('lbFEConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('lbBEPoolId')]"
						},
						"probe": {
							"id": "[variables('lbProbeId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 445,
						"backendPort": 445,
						"enableFloatingIP": false
						}
					}
				],
				"probes": [
					{
						"name": "[variables('lbProbe')]",
						"properties": {
							"protocol": "Tcp",
							"port": 59999,
							"intervalInSeconds": 31,
							"numberOfProbes": 10
						}
					}
				]
			}
		},
		{
			"name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"copy": {
				"name": "nicLoop",
				"count": "[parameters('vmCount')]"
			},
			"dependsOn": [
				"[variables('lbId')]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[variables('lbBEPoolID')]"
								}
							]
						}
					}
				]
			}
		},
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion')]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyindex(),'-newVM')]",
			"dependsOn": [
				"storageAccountLoop",
				"nicLoop",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
			],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmLoopTemplateURL')]"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(variables('vmNamePrefix'), copyindex())]"
                    },
                    "storageAccountUri": {
                        "value": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('StorageNamePrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob]"
                    },
                    "vmAvailabilitySetName": {
                        "value": "[variables('vmAvailabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmDiskCount": {
                        "value": "[parameters('vmDiskCount')]"
                    },
                    "vmDiskSize": {
                        "value": "[parameters('vmDiskSize')]"
                    },
					"vhdContainerName": {
						"value": "[variables('vhdContainerName')]"
					},
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },													
					"imagePublisher": {
						"value": "[parameters('imagePublisher')]"
					},
					"imageOffer": {
						"value": "[parameters('imageOffer')]"
					},
					"imageSKU": {
						"value": "[parameters('imageSKU')]"
					},
					"imageVersion": {
						"value": "[parameters('imageVersion')]"
					}
                }
            }
        },
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmNamePrefix'),string(add(copyindex(),1)),'/s2dPrep')]",
			"apiVersion": "[variables('apiVersionVMExtensions')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"virtualMachineLoop"
			],
			"copy": {
				"name": "virtualMachineExtensionLoop",
				"count": "[sub(parameters('vmCount'),1)]"
			},
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.20",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"modulesUrl": "[variables('s2dPrepModulesURL')]",
					"configurationFunction": "[variables('s2dPrepFunction')]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds": {
							"userName": "[parameters('adminUserName')]",
							"password": "PrivateSettingsRef:adminPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmNamePrefix'),'0/s2dConfig')]",
			"apiVersion": "[variables('apiVersionVMExtensions')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"virtualMachineLoop",
				"virtualMachineExtensionLoop",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"				
			],
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.20",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"modulesUrl": "[variables('s2dConfigModulesURL')]",
					"configurationFunction": "[variables('s2dConfigFunction')]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"clusterName": "[variables('clusterName')]",
						"fsName": "[parameters('fsName')]",
						"shareName": "[parameters('shareName')]",
						"lbIPAddress": "[parameters('lbIPAddress')]",
						"vmNamePrefix": "[variables('vmNamePrefix')]",
						"vmCount": "[parameters('vmCount')]",
						"vmDiskSize": "[parameters('vmDiskSize')]",
						"witnessStorageName": "[variables('witnessStorageName')]",
						"witnessStorageKey": {
							"userName": "PLACEHOLDER-DO-NOT-USE",
							"password": "PrivateSettingsRef:witnessStorageKey"
						},
						"adminCreds": {
							"userName": "[parameters('adminUserName')]",
							"password": "PrivateSettingsRef:adminPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')),variables('apiVersionStorage')).key1]"
					}
				}
			}
		}
	],
	"outputs": {
		"fsName": {
			"type": "string",
			"value": "[parameters('fsName')]"
		},
		"shareName": {
			"type": "string",
			"value": "[parameters('shareName')]"
		}
	}
}